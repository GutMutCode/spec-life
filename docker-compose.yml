version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: taskpriority-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: taskpriority
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-taskpriority_dev_password}
      POSTGRES_DB: task_priority_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.utf8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskpriority -d task_priority_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskpriority-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskpriority-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      DATABASE_URL: postgresql://taskpriority:${POSTGRES_PASSWORD:-taskpriority_dev_password}@postgres:5432/task_priority_dev
      JWT_SECRET: ${JWT_SECRET:-change-me-in-production}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:80}
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    networks:
      - taskpriority-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
    container_name: taskpriority-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    networks:
      - taskpriority-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  taskpriority-network:
    driver: bridge
